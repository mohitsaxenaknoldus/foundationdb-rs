var searchIndex = JSON.parse('{\
"bindingtester":{"doc":"","t":[13,13,13,13,13,13,13,13,13,13,13,7,7,7,13,13,13,7,7,7,13,13,13,13,13,13,13,13,3,4,13,13,7,13,13,13,13,7,13,13,13,13,13,6,3,3,3,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,7,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,12,5,11,5,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,5,11,11,11,12,12,12,12,12,5,5,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["AtomicOp","Cancel","Clear","ClearRange","Commit","Concat","Dead","DecodeDouble","DecodeFloat","DisableWriteConflict","Dup","ERROR_MULTIPLE","ERROR_NONE","ESTIMATE_RANGE_RESPONSE","EmptyStack","EncodeDouble","EncodeFloat","GOT_APPROXIMATE_SIZE","GOT_COMMITTED_VERSION","GOT_READ_VERSION","Get","GetApproximateSize","GetCommittedVersion","GetEstimatedRangeSize","GetKey","GetRange","GetReadVersion","GetVersionstamp","Instr","InstrCode","LogStack","NewTransaction","OK","OnError","Pending","Pop","Push","RESULT_NOT_PRESENT","ReadConflictKey","ReadConflictRange","Reset","Set","SetReadVersion","StackFuture","StackItem","StackMachine","StackResult","StartThread","Sub","Swap","Transaction","TransactionCancelled","TransactionCommitError","TransactionCommitted","TransactionState","TuplePack","TuplePackWithVersionstamp","TupleRange","TupleSort","TupleUnpack","UnitTests","UseTransaction","WAITED_FOR_EMPTY","WaitEmpty","WaitFuture","WriteConflictKey","WriteConflictRange","as_mut","await_fut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","clone","clone_into","code","cur_transaction","data","data","database","fetch_instr","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","fut","has_flags","has_opt","into","into","into","into","into","into","join","last_version","main","maybe_pop","mutation_from_str","new","next_trx_id","number","pop","pop_bytes","pop_database","pop_element","pop_i32","pop_i64","pop_selector","pop_selector","pop_snapshot","pop_starts_with","pop_str","pop_usize","prefix","push","push_err","push_fut","push_res","range","reset","run","run_step","selector","snapshot","stack","starts_with","state","streaming_from_value","strinc","take","threads","to_owned","transactions","trx_counter","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0"],"q":["bindingtesterbindingtester::InstrCode","bindingtester::TransactionState","","","",""],"di":[1,1,1,1,1,1,2,1,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,1,1,0,1,2,1,1,0,1,1,1,1,1,0,0,0,0,1,1,1,2,2,2,2,0,1,1,1,1,1,1,1,0,1,1,1,1,2,3,4,5,3,2,6,1,4,5,3,2,6,1,6,3,3,4,6,5,3,4,6,4,3,2,1,4,4,5,5,5,5,3,2,6,1,3,4,0,4,5,3,2,6,1,6,6,0,6,0,6,6,3,6,6,4,6,6,6,4,6,4,4,6,6,6,6,6,6,6,0,2,6,6,4,4,6,4,5,0,0,2,6,3,6,6,4,5,3,2,6,1,4,5,3,2,6,1,4,5,3,2,6,1,4,5,3,2,6,1,7,8,9,10,11,12],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["transaction",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["fdbresult",6]],["result",4]],[[]],[[]],null,null,null,null,null,[[["transaction",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["fdbresult",6,[["element",4]]]]],[[["element",4]]],[[]],[[["fdberror",3]]],[[]],[[]],[[]],[[]],null,[[],["bool",15]],[[["str",15],["str",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[["str",15]],["mutationtype",4]],[[["database",3],["bytes",3]]],[[],["usize",15]],null,[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],null,[[["usize",15],["element",4]]],[[["usize",15],["fdberror",3]]],[[["usize",15],["usize",15],["pin",3,[["box",3,[["future",8]]]]]]],[[["usize",15],["fdbresult",6]]],[[["bytes",3]]],[[]],[[["arc",3,[["database",3]]]]],[[["arc",3,[["database",3]]],["usize",15],["instr",3]]],null,null,null,null,null,[[["i32",15]],["streamingmode",4]],[[["bytes",3]],["bytes",3]],[[["usize",15]],["transaction",3]],null,[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null],"p":[[4,"InstrCode"],[4,"TransactionState"],[3,"StackItem"],[3,"Instr"],[3,"StackResult"],[3,"StackMachine"],[13,"Push"],[13,"Transaction"],[13,"TransactionCancelled"],[13,"TransactionCommitted"],[13,"TransactionCommitError"],[13,"Pending"]]},\
"fdb_bench":{"doc":"","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,12,5,11,12,12,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11],"n":["Bench","Counter","Opt","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clap","clone","clone","clone","clone_into","clone_into","clone_into","count","db","decr","fmt","from","from","from","from_clap","inner","into","into","into","key_len","main","new","opt","queue_depth","run","run_bench","run_range","size","threads","to_owned","to_owned","to_owned","trx_batch_size","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","val_len","vzip","vzip","vzip"],"q":["fdb_bench","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,2,3,1,2,3,3,1,2,3,1,2,3,3,2,1,3,1,2,3,3,1,1,2,3,3,0,1,2,3,2,2,2,1,3,1,2,3,3,1,2,3,1,2,3,1,2,3,3,1,2,3],"f":[null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["app",3]],[[],["counter",3]],[[],["bench",3]],[[],["opt",3]],[[]],[[]],[[]],null,null,[[["usize",15]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["argmatches",3]]],null,[[]],[[]],[[]],null,[[]],[[["usize",15]]],null,null,[[]],[[["steprng",3],["counter",3]]],[[["range",3,[["usize",15]]],["counter",3]]],null,null,[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]]],"p":[[3,"Counter"],[3,"Bench"],[3,"Opt"]]},\
"foundationdb":{"doc":"FoundationDB Rust Client API","t":[3,8,16,3,6,16,16,3,3,8,3,3,3,3,3,11,0,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,0,11,11,11,11,11,12,11,12,11,11,11,11,12,12,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,3,13,13,4,13,13,13,13,13,13,18,18,18,18,13,13,13,4,6,13,3,13,13,3,8,8,13,3,13,3,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,10,11,11,11,11,11,5,11,11,11,11,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,4,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["Database","DatabaseTransact","Error","FdbError","FdbResult","Future","Item","KeySelector","RangeOption","TransactError","TransactOption","Transaction","TransactionCancelled","TransactionCommitError","TransactionCommitted","add_conflict_range","api","atomic_op","begin","boot","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","clear","clear_range","clear_subspace_range","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","code","commit","committed_version","create_trx","default","default","default","default_config_path","deref","drop","drop","end","first_greater_or_equal","first_greater_than","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_code","from_path","future","get","get_addresses_for_key","get_approximate_size","get_estimated_range_size_bytes","get_key","get_range","get_ranges","get_ranges_keyvalues","get_read_version","get_versionstamp","idempotent","into","into","into","into","into","into","into","into","into","is_idempotent","is_maybe_committed","is_retryable","is_retryable_not_committed","key","last_less_or_equal","last_less_than","limit","message","mode","new","new","new_compat","next_range","offset","on_error","on_error","options","or_equal","reset","reset","reset","reset","retry_limit","rev","reverse","set","set_option","set_option","set_read_version","target_bytes","time_out","to_owned","to_owned","to_owned","to_owned","to_string","to_string","transact","transact","transact_boxed","transact_boxed_local","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_fdb_error","try_into_fdb_error","tuple","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","watch","FdbApiBuilder","NetworkAutoStop","NetworkBuilder","NetworkRunner","NetworkStop","NetworkWait","boot","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","default","drop","from","from","from","from","from","from","get_max_api_version","into","into","into","into","into","into","run","runtime_version","set_option","set_runtime_version","stop","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","wait","FdbAddress","FdbAddresses","FdbKeyValue","FdbSlice","FdbValue","FdbValues","FdbValuesIter","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","eq","eq","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into_iter","into_iter","key","len","more","next","next_back","nth","nth_back","size_hint","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AccessSystemKeys","Add","And","AppendIfFits","AutoThrottleTag","BitAnd","BitOr","BitXor","BuggifyDisable","BuggifyEnable","BuggifySectionActivatedProbability","BuggifySectionFiredProbability","BypassUnreadable","ByteMax","ByteMin","CallbacksOnExternalThreads","CausalReadDisable","CausalReadRisky","CausalWriteRisky","ClientBuggifyDisable","ClientBuggifyEnable","ClientBuggifySectionActivatedProbability","ClientBuggifySectionFiredProbability","ClientThreadsPerVersion","ClusterFile","CompareAndClear","ConflictRangeType","DatabaseOption","DatacenterId","DebugRetryLogging","DebugTransactionIdentifier","DisableClientStatisticsLogging","DisableLocalClient","DisableMultiVersionClientApi","DurabilityDatacenter","DurabilityDevNullIsWebScale","DurabilityRisky","EnableRunLoopProfiling","EnableSlowTaskProfiling","ErrorPredicate","Exact","ExternalClientDirectory","ExternalClientLibrary","IncludePortInAddress","InitializeNewDatabase","Iterator","Knob","Large","LocalAddress","LocationCacheSize","LockAware","LogTransaction","MachineId","Max","MaxRetryDelay","MaxWatches","MaybeCommitted","Medium","Min","MutationType","NetworkOption","NextWriteNoWriteConflictRange","Or","PriorityBatch","PrioritySystemImmediate","Read","ReadAheadDisable","ReadLockAware","ReadSystemKeys","ReadYourWritesDisable","ReportConflictingKeys","RetryLimit","Retryable","RetryableNotCommitted","Serial","ServerRequestTracing","SetVersionstampedKey","SetVersionstampedValue","SizeLimit","Small","SnapshotRywDisable","SnapshotRywDisable","SnapshotRywEnable","SnapshotRywEnable","SpecialKeySpaceRelaxed","StreamingMode","TLSCaBytes","TLSCaPath","TLSCertBytes","TLSCertPath","TLSKeyBytes","TLSKeyPath","TLSPassword","TLSPlugin","TLSVerifyPeers","Tag","Timeout","TraceClockSource","TraceEnable","TraceFileIdentifier","TraceFormat","TraceLogGroup","TraceMaxLogsSize","TracePartialFileSuffix","TraceRollSize","TransactionBypassUnreadable","TransactionCausalReadRisky","TransactionIncludePortInAddress","TransactionLoggingEnable","TransactionLoggingMaxFieldLength","TransactionLoggingMaxFieldLength","TransactionMaxRetryDelay","TransactionOption","TransactionRetryLimit","TransactionSizeLimit","TransactionTimeout","UseProvisionalProxies","UsedDuringCommitProtectionDisable","WantAll","Write","Xor","apply","apply","apply","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","code","code","code","code","code","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","BadCode","BadPrefix","BadStringFormat","BadUuid","BigInt","Bool","Bytes","Bytes","Double","Element","Float","Int","IoError","Message","MissingBytes","MultipleIncomplete","NAMESPACE_DNS","NAMESPACE_OID","NAMESPACE_URL","NAMESPACE_X500","Nil","None","OneIncomplete","PackError","PackResult","String","Subspace","TrailingBytes","Tuple","TupleDepth","TuplePack","TupleUnpack","UnsupportedIntLength","Uuid","Uuid","Versionstamp","Versionstamp","VersionstampOffset","add_assign","add_assign","all","as_bigint","as_bool","as_bytes","as_bytes","as_bytes","as_f32","as_f64","as_fields","as_i64","as_ref","as_str","as_tuple","as_u128","as_uuid","as_versionstamp","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","complete","count_incomplete_versionstamp","default","depth","deref","encode_buffer","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_fields","from_fields_le","from_slice","from_str","from_u128","from_u128_le","get_variant","get_version","get_version_num","hash","hash","hash","hash","hca","incomplete","increment","into","into","into","into","into","into","into","into","into","into_owned","into_owned","is_complete","is_nil","is_start_of","ne","ne","ne","ne","nil","pack","pack","pack","pack","pack","pack","pack","pack_into","pack_into_vec","pack_into_vec","pack_into_vec_with_versionstamp","pack_into_vec_with_versionstamp","pack_into_with_versionstamp","pack_root","pack_root","pack_to_vec","pack_to_vec","pack_to_vec_with_versionstamp","pack_to_vec_with_versionstamp","pack_with_versionstamp","parse_str","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","range","subspace","to_fields_le","to_hyphenated","to_hyphenated_ref","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_simple","to_simple_ref","to_string","to_string","to_string","to_u128_le","to_urn","to_urn_ref","transaction_version","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpack","unpack","unpack","unpack","unpack","unpack","unpack","unpack_root","unpack_root","user_version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","expected","found","offset","size","FdbError","HcaError","HighContentionAllocator","InvalidDirectoryLayerMetadata","PackError","PoisonError","RandError","allocate","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","from","from","from","from","into","into","new","try_from","try_from","try_into","try_into","try_into_fdb_error","type_id","type_id","vzip","vzip","0","0","0"],"q":["foundationdbfoundationdb::api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","foundationdb::future","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","foundationdb::optionsfoundationdb::options::DatabaseOption","","","","","","","","","foundationdb::options::NetworkOption","","","","","","","","","","","","","","","","","","","","","","","","","","","foundationdb::options::TransactionOption","","","","","","","","","","foundationdb::tuplefoundationdb::tuple::Element","","","","","","","","","","foundationdb::tuple::PackError","","","","foundationdb::tuple::VersionstampOffset","","foundationdb::tuple::hca","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","foundationdb::tuple::hca::HcaError","",""],"d":["Represents a FoundationDB database","","","The Standard Error type of FoundationDB","Alias for <code>Result&lt;..., FdbError&gt;</code>","","","A <code>KeySelector</code> identifies a particular key in the database.","<code>RangeOption</code> represents a query parameters for range scan …","A trait that must be implemented to use <code>Database::transact</code> …","A set of options that controls the behavior of …","In FoundationDB, a transaction is a mutable snapshot of a …","A cancelled transaction","A failed to commit transaction.","A committed transaction.","Adds a conflict range to a transaction without performing …","Configuration of foundationDB API and Network","Modify the database snapshot represented by transaction to …","The beginning of the range.","Initialize the FoundationDB Client API, this can only be …","","","","","","","","","","","","","","","","","","","Cancels the transaction. All pending or future uses of the …","Modify the database snapshot represented by transaction to …","Modify the database snapshot represented by transaction to …","","","","","","","","","","Raw foundationdb error code","Attempts to commit the sets and clears previously applied …","Retrieves the database version number at which a given …","Creates a new transaction on the given database.","Create a database for the default configuration path","","","Returns the default Fdb cluster configuration file path","","","","The end of the range.","Creates a <code>KeySelector</code> that picks the first key greater …","Creates a <code>KeySelector</code> that picks the first key greater …","","","","","","","","","","","","","","","","","","","","","","","","","","Converts from a raw foundationDB error code","Create a database for the given configuration path","Most functions in the FoundationDB API are asynchronous, …","Reads a value from the database snapshot represented by …","Returns a list of public network addresses as strings, one …","Returns an FDBFuture which will be set to the approximate …","Get the estimated byte size of the key range based on the …","Resolves a key selector against the keys in the database …","Reads all key-value pairs in the database snapshot …","Reads all key-value pairs in the database snapshot …","Reads all key-value pairs in the database snapshot …","The transaction obtains a snapshot read version …","Returns an FDBFuture which will be set to the versionstamp …","An idempotent TransactOption","","","","","","","","","","","Indicates the transaction may have succeeded, though not …","Indicates the operations in the transactions should be …","Indicates the transaction has not committed, though in a …","Returns a the key that serves as the anchor for this …","Creates a <code>KeySelector</code> that picks the last key less than or …","Creates a <code>KeySelector</code> that picks the last key less than …","If non-zero, indicates the maximum number of key-value …","","One of the options::StreamingMode values indicating how …","Create a database for the given configuration path if any, …","Constructs a new KeySelector from the given parameters.","Create a database for the given configuration path","","Returns the key offset parameter for this <code>KeySelector</code>","Implements the recommended retry and backoff behavior for …","Implements the recommended retry and backoff behavior for …","Generated configuration types for use with the various …","True if this is an <code>or_equal</code> <code>KeySelector</code>","Reset the transaction to its initial state.","Reset the transaction to its initial state.","Reset the transaction to its initial state.","Reset transaction to its initial state.","","Reverses the range direction.","If true, key-value pairs will be returned in reverse …","Modify the database snapshot represented by transaction to …","Called to set an option an on <code>Database</code>.","Called to set an option on an FDBTransaction.","Sets the snapshot read version used by a transaction.","If non-zero, indicates a (soft) cap on the combined number …","","","","","","","","","<code>transact</code> returns a future which retries on error. It tries …","","","","","","","","","","","","","","","","","","","","","","","Implementation of the official tuple layer typecodes","","","","","","","","","","","","","","","","","","","A watch’s behavior is relative to the transaction that …","A Builder with which different versions of the Fdb C API …","Stop the associated <code>NetworkRunner</code> and thread if dropped","A Builder with which the foundationDB network event loop …","A foundationDB network event loop runner","Allow to stop the associated and running <code>NetworkRunner</code>.","A condition object that can wait for the associated …","Starts the FoundationDB run loop in a dedicated thread. …","","","","","","","","","","","","","Initialize the foundationDB API and returns a …","Finalizes the initialization of the Network and returns a …","","","","","","","","","Returns the max api version of the underlying Fdb C API …","","","","","","","Start the foundationDB network event loop in the current …","The version of run-time behavior the API is requested to …","Set network options.","Set the version of run-time behavior the API is requested …","Signals the event loop invoked by <code>Network::run</code> to …","","","","","","","","","","","","","","","","","","","","","","","","","Wait for the associated <code>NetworkRunner</code> to actually run.","An address owned by a foundationDB future","A slice of addresses owned by a foundationDB future","A keyvalue owned by a foundationDB future","A slice of bytes owned by a foundationDB future","A keyvalue you can own","An slice of keyvalues owned by a foundationDB future","An iterator of keyvalues owned by a foundationDB future","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key","","<code>true</code> if there is another range after this one","","","","","","","","","","","","","","","","","","","","","","","","","","","value","","","","","","","","Allows this transaction to read and modify system keys …","addend","value with which to perform bitwise and","value to append to the database value","String identifier used to associated this transaction with …","value with which to perform bitwise and","value with which to perform bitwise or","value with which to perform bitwise xor","","","probability expressed as a percentage between 0 and 100","probability expressed as a percentage between 0 and 100","Allows <code>get</code> operations to read from sections of keyspace …","value to check against database value","value to check against database value","If set, callbacks from external client libraries can be …","","The read version will be committed, and usually will be …","The transaction, if not self-conflicting, may be committed …","Disable client buggify","Enable client buggify - will make requests randomly fail …","probability expressed as a percentage between 0 and 100","probability expressed as a percentage between 0 and 100","Number of client threads to be spawned.  Each cluster will …","path to cluster file","Value to compare with","","","Hexadecimal ID","Optional transaction name","String identifier to be used when tracing or profiling …","Disables logging of client statistics, such as sampled …","Prevents connections through the local client, allowing …","Disables the multi-version client API and instead uses the …","","Deprecated","","Enables debugging feature to perform run loop profiling. …","Deprecated","","Infrequently used. The client has passed a specific row …","path to directory containing client libraries","path to client library","Addresses returned by get_addresses_for_key include the …","This is a write-only transaction which sets the initial …","The default. The client doesn’t know how much of the …","knob_name=knob_value","Infrequently used. Transfer data in batches large enough …","IP:PORT","Max location cache entries","The transaction can read and write to locked databases, …","Enables tracing for this transaction and logs results to …","Hexadecimal ID","value to check against database value","value in milliseconds of maximum delay","Max outstanding watches","Returns <code>true</code> if the error indicates the transaction may …","Infrequently used. Transfer data in batches sized in …","value to check against database value","","","The next write performed on this transaction will not …","value with which to perform bitwise or","Specifies that this transaction should be treated as low …","Specifies that this transaction should be treated as …","Used to add a read conflict range","Deprecated","The transaction can read from locked databases.","Allows this transaction to read system keys (those that …","Reads performed by a transaction will not see any prior …","The transaction can retrieve keys that are conflicting …","number of times to retry","Returns <code>true</code> if the error indicates the operations in the …","Returns <code>true</code> if the error indicates the transaction has …","Transfer data in batches large enough that an individual …","Sets an identifier for server tracing of this transaction. …","value to which to set the transformed key","value to versionstamp and set","value in bytes","Infrequently used. Transfer data in batches small enough …","Snapshot read operations will not see the results of …","Snapshot read operations will not see the results of …","Snapshot read operations will see the results of writes …","Snapshot read operations will see the results of writes …","By default, the special key space will only allow users to …","","ca bundle","file path","certificates","file path","key","file path","key passphrase","file path or linker-resolved name","verification pattern","String identifier used to associated this transaction with …","value in milliseconds of timeout","Trace clock source","path to output directory (or NULL for current working …","The identifier that will be part of all trace file names","Format of trace files","value of the LogGroup attribute","max total size of trace files","Append this suffix to partially written log files. When a …","max size of a single trace output file","Allows <code>get</code> operations to read from sections of keyspace …","The read version will be committed, and usually will be …","Addresses returned by get_addresses_for_key include the …","String identifier to be used in the logs when tracing this …","Maximum length of escaped key and value fields.","Maximum length of escaped key and value fields.","value in milliseconds of maximum delay","","number of times to retry","value in bytes","value in milliseconds of timeout","This option should only be used by tools which change the …","By default, operations that are performed on a transaction …","Client intends to consume the entire range and would like …","Used to add a write conflict range","value with which to perform bitwise xor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represent a sequence of bytes (i.e. &amp;u8)","","","","","","","","","","UUID namespace for Domain Name System (DNS).","UUID namespace for ISO Object Identifiers (OIDs).","UUID namespace for Uniform Resource Locators (URLs).","UUID namespace for X.500 Distinguished Names (DNs).","","","","A packing/unpacking error","Alias for <code>Result&lt;..., tuple::Error&gt;</code>","","Represents a well-defined region of keyspace in a …","","","Tracks the depth of a Tuple decoding chain","A type that can be packed","A type that can be unpacked","","A Universally Unique Identifier (UUID).","","","","","","","<code>all</code> returns the Subspace corresponding to all keys in a …","","","","","Returns an array of 16 octets containing the UUID data.","","","Returns the four field values of the UUID in big-endian …","","","","","Returns a 128bit value containing the UUID data.","","","","","","","","","","","","","","","","","","","<code>bytes</code> returns the literal bytes of the prefix of this …","","","","","","","","","","","","","","","","","","","","","","","Returns the current depth in any recursive tuple …","","A buffer that can be used for <code>encode_...</code> calls, that is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>from_bytes</code> returns a new Subspace from the provided bytes.","Creates a UUID using the supplied big-endian bytes.","Creates a UUID from four field values in big-endian order.","Creates a UUID from four field values in little-endian …","Creates a UUID using the supplied big-endian bytes.","","Creates a UUID from a 128bit value in big-endian order.","Creates a UUID from a 128bit value in little-endian order.","Returns the variant of the UUID structure.","Returns the version of the UUID.","Returns the version number of the UUID.","","","","","The directory layer offers subspace indirection, where …","","Increment the depth by one, this be called when calling …","","","","","","","","","","","","","Tests if the UUID is nil.","<code>is_start_of</code> returns true if the provided key starts with …","","","","","The ‘nil UUID’.","Pack value and returns the packed buffer","","","Returns the key encoding the specified Tuple with the …","","","","Pack value into the given buffer","Pack value into the given buffer","Pack value into the given buffer","Pack value into the given buffer","Pack value into the given buffer","Pack value into the given buffer","","","Pack value and returns the packed buffer","Pack value and returns the packed buffer","Pack value and returns the packed buffer","Pack value and returns the packed buffer","Pack value and returns the packed buffer","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","","","","","<code>range</code> returns first and last key of given Subspace","Returns a new Subspace whose prefix extends this Subspace …","Returns the four field values of the UUID in little-endian …","Get a <code>Hyphenated</code> formatter.","Get a borrowed <code>HyphenatedRef</code> formatter.","","","","","","","","Get a <code>Simple</code> formatter.","Get a borrowed <code>SimpleRef</code> formatter.","","","","Returns a 128bit little-endian value containing the UUID …","Get a <code>Urn</code> formatter.","Get a borrowed <code>UrnRef</code> formatter.","","","","","","","","","","","","","","","","","","","","","","","","","","Unpack input","","","<code>unpack</code> returns the Tuple encoded by the given key with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a High Contention Allocator for a given subspace","","","","","Returns a byte string that","","","","","","","","","","","","","","","Constructs an allocator that will use the input subspace …","","","","","","","","","","","",""],"i":[0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,2,0,2,3,0,4,5,6,7,8,9,10,2,3,4,5,6,7,8,9,10,2,3,2,2,2,2,6,7,8,3,6,7,8,3,7,2,9,4,4,6,3,0,5,4,2,3,8,8,5,5,7,7,8,9,10,2,3,4,5,6,7,7,8,9,10,2,2,2,3,3,3,3,3,7,4,0,2,2,2,2,2,2,2,2,2,2,6,4,5,6,7,8,9,10,2,3,6,7,7,7,8,8,8,3,7,3,4,8,4,3,8,5,2,0,8,5,9,10,2,6,3,3,2,4,2,2,3,6,6,7,8,3,5,7,1,4,4,4,4,5,6,7,8,9,10,2,3,4,5,6,7,8,9,10,2,3,11,7,0,4,5,6,7,8,9,10,2,3,4,5,6,7,8,9,10,2,3,2,0,0,0,0,0,0,12,13,12,14,15,16,17,13,12,14,15,16,17,13,12,13,17,13,12,14,15,16,17,0,13,12,14,15,16,17,14,13,12,13,16,13,12,14,15,16,17,13,12,14,15,16,17,13,12,14,15,16,17,13,12,14,15,16,17,15,0,0,0,0,0,0,0,18,19,20,21,22,18,19,20,21,23,22,24,18,19,20,21,23,22,24,18,19,20,21,22,22,24,22,24,18,19,20,21,23,22,24,18,19,20,21,23,22,24,21,23,24,23,21,23,23,23,23,23,18,19,20,21,23,22,24,18,19,20,21,23,22,24,18,19,20,21,23,22,24,24,18,19,20,21,23,22,24,25,26,26,26,25,26,26,26,27,27,27,27,25,26,26,27,25,25,25,27,27,27,27,27,27,26,0,0,28,25,25,27,27,27,25,25,25,27,27,0,29,27,27,25,25,29,27,29,27,28,25,25,28,26,25,28,30,29,26,0,0,25,26,25,25,31,25,25,25,25,25,25,30,30,29,25,26,26,25,29,28,25,28,25,25,0,27,27,27,27,27,27,27,27,27,25,25,27,27,27,27,27,27,27,27,28,28,28,25,28,25,28,0,28,28,28,25,25,29,31,26,27,28,25,27,28,25,29,26,31,30,27,28,25,29,26,31,30,27,28,25,29,26,31,30,27,28,25,29,26,31,30,27,28,25,29,26,31,30,27,28,25,29,26,31,30,27,28,25,29,26,31,30,27,28,25,29,26,31,30,27,28,25,29,26,31,30,27,28,25,29,26,31,30,27,28,25,29,26,31,30,27,28,25,29,26,31,30,27,28,25,29,26,31,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,79,79,79,80,80,0,80,80,0,80,80,79,79,79,81,82,82,82,82,80,81,81,0,0,80,0,79,80,0,0,0,79,0,80,0,80,0,81,81,83,80,80,80,84,82,80,80,82,80,78,80,80,82,80,80,80,81,83,84,85,79,78,82,80,81,83,84,85,79,78,82,83,80,81,83,84,85,78,82,80,81,83,84,85,78,82,80,81,84,78,82,84,80,82,85,78,82,80,81,84,78,82,80,81,83,84,79,79,78,78,82,82,82,82,80,81,83,83,84,84,85,79,79,78,78,78,78,78,82,83,82,82,82,82,82,82,82,82,82,82,81,84,78,82,0,84,85,80,81,83,84,84,85,79,78,82,80,78,84,82,83,81,84,78,82,82,0,86,80,83,84,78,82,0,86,86,86,86,0,86,86,86,86,86,86,0,82,80,81,84,78,82,83,83,82,82,82,80,81,83,84,85,78,82,82,82,79,78,82,82,82,82,84,80,81,83,84,85,79,78,82,80,81,83,84,85,79,78,82,80,81,83,84,85,79,78,82,0,87,80,83,84,78,82,87,87,84,80,81,83,84,85,79,78,82,88,89,90,91,92,93,94,95,96,97,98,99,100,100,101,102,103,0,0,103,103,103,103,104,103,104,103,104,103,104,103,103,103,103,103,104,103,104,104,103,104,103,104,103,103,104,103,104,105,106,107],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["conflictrangetype",4]],["fdbresult",6]],null,[[["mutationtype",4]]],null,[[],["networkautostop",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["transactioncancelled",3]],[[]],[[]],[[["subspace",3]]],[[],["transactoption",3]],[[],["fdberror",3]],[[],["keyselector",3]],[[],["rangeoption",3]],[[]],[[]],[[]],[[]],[[],["i32",15]],[[]],[[],["fdbresult",6,[["i64",15]]]],[[],["fdbresult",6,[["transaction",3]]]],[[],["fdbresult",6,[["database",3]]]],[[],["transactoption",3]],[[]],[[],["str",15]],[[],["fdberror",3]],[[]],[[]],null,[[["into",8,[["cow",4]]]]],[[["into",8,[["cow",4]]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["transactioncommiterror",3]],["fdberror",3]],[[]],[[]],[[]],[[["transactioncancelled",3]],["transaction",3]],[[]],[[["transactioncommitted",3]],["transaction",3]],[[]],[[["subspace",3]]],[[]],[[]],[[]],[[["fdb_error_t",6]]],[[["str",15]],["fdbresult",6,[["database",3]]]],null,[[["bool",15]]],[[]],[[]],[[]],[[["keyselector",3],["bool",15]]],[[["rangeoption",3],["usize",15],["bool",15]]],[[["rangeoption",3],["bool",15]]],[[["rangeoption",3],["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[["into",8,[["cow",4]]]]],[[["into",8,[["cow",4]]]]],null,[[],["str",15]],null,[[["option",4,[["str",15]]]],["fdbresult",6,[["database",3]]]],[[["cow",4],["bool",15],["i32",15]]],[[["option",4,[["str",15]]]]],[[["fdbvalues",3]],["option",4]],[[],["i32",15]],[[]],[[["fdberror",3]]],null,[[],["bool",15]],[[],["transaction",3]],[[],["transaction",3]],[[],["transaction",3]],[[]],null,[[]],null,[[]],[[["databaseoption",4]],["fdbresult",6]],[[["transactionoption",4]],["fdbresult",6]],[[["i64",15]]],null,null,[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[["transaction",3]]],[[["transactoption",3]]],[[["transactoption",3]]],[[["transactoption",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["fdberror",3]]]],[[],["result",4,[["fdberror",3]]]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["fdbresult",6,[["networkautostop",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["fdbresult",6,[["networkbuilder",3]]]],[[],["fdbresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["i32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["fdbresult",6]],[[],["i32",15]],[[["networkoption",4]],["fdbresult",6]],[[["i32",15]]],[[],["fdbresult",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["networkstop",3]],null,null,null,null,null,null,null,[[]],[[]],[[],["cstr",3]],[[]],[[],["fdbkeyvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cstr",3]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["bool",15]],[[],["option",4]],[[],["option",4]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["fdbresult",6]],[[],["fdbresult",6]],[[],["fdbresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["networkoption",4]],[[],["databaseoption",4]],[[],["transactionoption",4]],[[],["streamingmode",4]],[[],["mutationtype",4]],[[],["conflictrangetype",4]],[[],["errorpredicate",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["fdbnetworkoption",6]],[[],["fdbdatabaseoption",6]],[[],["fdbtransactionoption",6]],[[],["fdbstreamingmode",6]],[[],["fdbmutationtype",6]],[[],["fdbconflictrangetype",6]],[[],["fdberrorpredicate",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]]],[[]],[[],["subspace",3]],[[],["option",4,[["bigint",3]]]],[[],["option",4,[["bool",15]]]],[[],["option",4,[["bytes",3]]]],[[]],[[]],[[],["option",4,[["f32",15]]]],[[],["option",4,[["f64",15]]]],[[]],[[],["option",4,[["i64",15]]]],[[]],[[],["option",4,[["str",15]]]],[[],["option",4]],[[],["u128",15]],[[],["option",4,[["uuid",3]]]],[[],["option",4,[["versionstamp",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["element",4]],[[],["versionstampoffset",4]],[[],["subspace",3]],[[],["versionstamp",3]],[[],["tupledepth",3]],[[],["bytes",3]],[[],["uuid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["ordering",4]],[[["versionstampoffset",4]],["ordering",4]],[[["versionstamp",3]],["ordering",4]],[[["bytes",3]],["ordering",4]],[[["uuid",3]],["ordering",4]],[[["u16",15]]],[[],["usize",15]],[[],["uuid",3]],[[],["usize",15]],[[]],[[]],[[],["bool",15]],[[["versionstampoffset",4]],["bool",15]],[[["versionstamp",3]],["bool",15]],[[["bytes",3]],["bool",15]],[[["uuid",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["error",3]]],[[["string",3]]],[[]],[[]],[[["vec",3,[["u8",15]]]]],[[["str",15]]],[[]],[[]],[[],["uuid",3]],[[["u32",15],["u16",15],["u16",15]],["result",4,[["uuid",3],["error",3]]]],[[["u32",15],["u16",15],["u16",15]],["result",4,[["uuid",3],["error",3]]]],[[],["result",4,[["uuid",3],["error",3]]]],[[["str",15]],["result",4,[["uuid",3]]]],[[["u128",15]],["uuid",3]],[[["u128",15]],["uuid",3]],[[],["option",4,[["variant",4]]]],[[],["option",4,[["version",4]]]],[[],["usize",15]],[[]],[[]],[[]],[[]],null,[[["u16",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["element",4]],[[],["vec",3,[["u8",15]]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["versionstampoffset",4]],["bool",15]],[[["versionstamp",3]],["bool",15]],[[["bytes",3]],["bool",15]],[[["uuid",3]],["bool",15]],[[],["uuid",3]],[[],["vec",3,[["u8",15]]]],[[["tupledepth",3]],["result",6,[["versionstampoffset",4]]]],[[["tupledepth",3]],["result",6,[["versionstampoffset",4]]]],[[],["vec",3,[["u8",15]]]],[[["tupledepth",3]],["result",6,[["versionstampoffset",4]]]],[[["tupledepth",3]],["result",6,[["versionstampoffset",4]]]],[[["tupledepth",3]],["result",6,[["versionstampoffset",4]]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]],["versionstampoffset",4]],[[["vec",3]],["versionstampoffset",4]],[[["vec",3]]],[[],["result",6,[["versionstampoffset",4]]]],[[],["result",6,[["versionstampoffset",4]]]],[[],["vec",3,[["u8",15]]]],[[],["vec",3,[["u8",15]]]],[[],["vec",3,[["u8",15]]]],[[],["vec",3,[["u8",15]]]],[[],["vec",3,[["u8",15]]]],[[["str",15]],["result",4,[["uuid",3],["error",3]]]],[[],["option",4,[["ordering",4]]]],[[["versionstampoffset",4]],["option",4,[["ordering",4]]]],[[["versionstamp",3]],["option",4,[["ordering",4]]]],[[["bytes",3]],["option",4,[["ordering",4]]]],[[["uuid",3]],["option",4,[["ordering",4]]]],[[]],[[]],[[]],[[],["hyphenated",3]],[[],["hyphenatedref",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["simple",3]],[[],["simpleref",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["u128",15]],[[],["urn",3]],[[],["urnref",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["packresult",6,[["tupleunpack",8]]]],[[["tupledepth",3]],["packresult",6]],[[["tupledepth",3]],["packresult",6]],[[],["packresult",6,[["tupleunpack",8]]]],[[["tupledepth",3]],["packresult",6]],[[["tupledepth",3]],["packresult",6]],[[["tupledepth",3]],["packresult",6]],[[],["packresult",6]],[[],["packresult",6]],[[],["u16",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["transaction",3]]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["fdberror",3]]],[[["packerror",4]]],[[["poisonerror",3]]],[[["randerror",3]]],[[]],[[]],[[]],[[["subspace",3]],["highcontentionallocator",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["fdberror",3]]]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null],"p":[[8,"DatabaseTransact"],[3,"Transaction"],[3,"RangeOption"],[3,"Database"],[3,"TransactionCommitError"],[3,"TransactOption"],[3,"FdbError"],[3,"KeySelector"],[3,"TransactionCommitted"],[3,"TransactionCancelled"],[8,"TransactError"],[3,"NetworkBuilder"],[3,"FdbApiBuilder"],[3,"NetworkRunner"],[3,"NetworkWait"],[3,"NetworkStop"],[3,"NetworkAutoStop"],[3,"FdbSlice"],[3,"FdbAddresses"],[3,"FdbAddress"],[3,"FdbValues"],[3,"FdbValue"],[3,"FdbValuesIter"],[3,"FdbKeyValue"],[4,"TransactionOption"],[4,"MutationType"],[4,"NetworkOption"],[4,"DatabaseOption"],[4,"StreamingMode"],[4,"ErrorPredicate"],[4,"ConflictRangeType"],[13,"LocationCacheSize"],[13,"MaxWatches"],[13,"MachineId"],[13,"DatacenterId"],[13,"TransactionLoggingMaxFieldLength"],[13,"TransactionTimeout"],[13,"TransactionRetryLimit"],[13,"TransactionMaxRetryDelay"],[13,"TransactionSizeLimit"],[13,"LocalAddress"],[13,"ClusterFile"],[13,"TraceEnable"],[13,"TraceRollSize"],[13,"TraceMaxLogsSize"],[13,"TraceLogGroup"],[13,"TraceFormat"],[13,"TraceClockSource"],[13,"TraceFileIdentifier"],[13,"TracePartialFileSuffix"],[13,"Knob"],[13,"TLSPlugin"],[13,"TLSCertBytes"],[13,"TLSCertPath"],[13,"TLSKeyBytes"],[13,"TLSKeyPath"],[13,"TLSVerifyPeers"],[13,"BuggifySectionActivatedProbability"],[13,"BuggifySectionFiredProbability"],[13,"TLSCaBytes"],[13,"TLSCaPath"],[13,"TLSPassword"],[13,"ExternalClientLibrary"],[13,"ExternalClientDirectory"],[13,"ClientThreadsPerVersion"],[13,"ClientBuggifySectionActivatedProbability"],[13,"ClientBuggifySectionFiredProbability"],[13,"DebugRetryLogging"],[13,"TransactionLoggingEnable"],[13,"DebugTransactionIdentifier"],[13,"TransactionLoggingMaxFieldLength"],[13,"Timeout"],[13,"RetryLimit"],[13,"MaxRetryDelay"],[13,"SizeLimit"],[13,"Tag"],[13,"AutoThrottleTag"],[3,"Bytes"],[4,"PackError"],[4,"Element"],[4,"VersionstampOffset"],[3,"Uuid"],[3,"Subspace"],[3,"Versionstamp"],[3,"TupleDepth"],[8,"TuplePack"],[8,"TupleUnpack"],[13,"Bytes"],[13,"String"],[13,"Tuple"],[13,"Int"],[13,"BigInt"],[13,"Float"],[13,"Double"],[13,"Bool"],[13,"Uuid"],[13,"Versionstamp"],[13,"Message"],[13,"IoError"],[13,"BadCode"],[13,"OneIncomplete"],[13,"None"],[4,"HcaError"],[3,"HighContentionAllocator"],[13,"FdbError"],[13,"PackError"],[13,"RandError"]]},\
"foundationdb_bench":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"foundationdb_gen":{"doc":"","t":[5],"n":["emit"],"q":["foundationdb_gen"],"d":[""],"i":[0],"f":[[[],["result",6]]],"p":[]},\
"foundationdb_options_gen":{"doc":"","t":[5],"n":["main"],"q":["foundationdb_options_gen"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"foundationdb_sys":{"doc":"","t":[6,6,17,17,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,6,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,17,17,17,17,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,3,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,6,6,6,6,6,6,6,6,6,6,3,6,6,17,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,6,5,5,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,6,6,6,6,6,6,6,6,6,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,6,6,6,6,6,6,12,12],"n":["FDBCallback","FDBConflictRangeType","FDBConflictRangeType_FDB_CONFLICT_RANGE_TYPE_READ","FDBConflictRangeType_FDB_CONFLICT_RANGE_TYPE_WRITE","FDBDatabase","FDBDatabaseOption","FDBDatabaseOption_FDB_DB_OPTION_DATACENTER_ID","FDBDatabaseOption_FDB_DB_OPTION_LOCATION_CACHE_SIZE","FDBDatabaseOption_FDB_DB_OPTION_MACHINE_ID","FDBDatabaseOption_FDB_DB_OPTION_MAX_WATCHES","FDBDatabaseOption_FDB_DB_OPTION_SNAPSHOT_RYW_DISABLE","FDBDatabaseOption_FDB_DB_OPTION_SNAPSHOT_RYW_ENABLE","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_BYPASS_UNREADABLE","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_CAUSAL_READ_RISKY","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_INCLUDE_PORT_IN_ADDRESS","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_LOGGING_MAX_FIELD_LENGTH","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_MAX_RETRY_DELAY","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_RETRY_LIMIT","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_SIZE_LIMIT","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_TIMEOUT","FDBErrorPredicate","FDBErrorPredicate_FDB_ERROR_PREDICATE_MAYBE_COMMITTED","FDBErrorPredicate_FDB_ERROR_PREDICATE_RETRYABLE","FDBErrorPredicate_FDB_ERROR_PREDICATE_RETRYABLE_NOT_COMMITTED","FDBFuture","FDBKeyValue","FDBMutationType","FDBMutationType_FDB_MUTATION_TYPE_ADD","FDBMutationType_FDB_MUTATION_TYPE_AND","FDBMutationType_FDB_MUTATION_TYPE_APPEND_IF_FITS","FDBMutationType_FDB_MUTATION_TYPE_BIT_AND","FDBMutationType_FDB_MUTATION_TYPE_BIT_OR","FDBMutationType_FDB_MUTATION_TYPE_BIT_XOR","FDBMutationType_FDB_MUTATION_TYPE_BYTE_MAX","FDBMutationType_FDB_MUTATION_TYPE_BYTE_MIN","FDBMutationType_FDB_MUTATION_TYPE_COMPARE_AND_CLEAR","FDBMutationType_FDB_MUTATION_TYPE_MAX","FDBMutationType_FDB_MUTATION_TYPE_MIN","FDBMutationType_FDB_MUTATION_TYPE_OR","FDBMutationType_FDB_MUTATION_TYPE_SET_VERSIONSTAMPED_KEY","FDBMutationType_FDB_MUTATION_TYPE_SET_VERSIONSTAMPED_VALUE","FDBMutationType_FDB_MUTATION_TYPE_XOR","FDBNetworkOption","FDBNetworkOption_FDB_NET_OPTION_BUGGIFY_DISABLE","FDBNetworkOption_FDB_NET_OPTION_BUGGIFY_ENABLE","FDBNetworkOption_FDB_NET_OPTION_BUGGIFY_SECTION_ACTIVATED_PROBABILITY","FDBNetworkOption_FDB_NET_OPTION_BUGGIFY_SECTION_FIRED_PROBABILITY","FDBNetworkOption_FDB_NET_OPTION_CALLBACKS_ON_EXTERNAL_THREADS","FDBNetworkOption_FDB_NET_OPTION_CLIENT_BUGGIFY_DISABLE","FDBNetworkOption_FDB_NET_OPTION_CLIENT_BUGGIFY_ENABLE","FDBNetworkOption_FDB_NET_OPTION_CLIENT_BUGGIFY_SECTION_ACTIVATED_PROBABILITY","FDBNetworkOption_FDB_NET_OPTION_CLIENT_BUGGIFY_SECTION_FIRED_PROBABILITY","FDBNetworkOption_FDB_NET_OPTION_CLIENT_THREADS_PER_VERSION","FDBNetworkOption_FDB_NET_OPTION_CLUSTER_FILE","FDBNetworkOption_FDB_NET_OPTION_DISABLE_CLIENT_STATISTICS_LOGGING","FDBNetworkOption_FDB_NET_OPTION_DISABLE_LOCAL_CLIENT","FDBNetworkOption_FDB_NET_OPTION_DISABLE_MULTI_VERSION_CLIENT_API","FDBNetworkOption_FDB_NET_OPTION_ENABLE_RUN_LOOP_PROFILING","FDBNetworkOption_FDB_NET_OPTION_ENABLE_SLOW_TASK_PROFILING","FDBNetworkOption_FDB_NET_OPTION_EXTERNAL_CLIENT_DIRECTORY","FDBNetworkOption_FDB_NET_OPTION_EXTERNAL_CLIENT_LIBRARY","FDBNetworkOption_FDB_NET_OPTION_KNOB","FDBNetworkOption_FDB_NET_OPTION_LOCAL_ADDRESS","FDBNetworkOption_FDB_NET_OPTION_TLS_CA_BYTES","FDBNetworkOption_FDB_NET_OPTION_TLS_CA_PATH","FDBNetworkOption_FDB_NET_OPTION_TLS_CERT_BYTES","FDBNetworkOption_FDB_NET_OPTION_TLS_CERT_PATH","FDBNetworkOption_FDB_NET_OPTION_TLS_KEY_BYTES","FDBNetworkOption_FDB_NET_OPTION_TLS_KEY_PATH","FDBNetworkOption_FDB_NET_OPTION_TLS_PASSWORD","FDBNetworkOption_FDB_NET_OPTION_TLS_PLUGIN","FDBNetworkOption_FDB_NET_OPTION_TLS_VERIFY_PEERS","FDBNetworkOption_FDB_NET_OPTION_TRACE_CLOCK_SOURCE","FDBNetworkOption_FDB_NET_OPTION_TRACE_ENABLE","FDBNetworkOption_FDB_NET_OPTION_TRACE_FILE_IDENTIFIER","FDBNetworkOption_FDB_NET_OPTION_TRACE_FORMAT","FDBNetworkOption_FDB_NET_OPTION_TRACE_LOG_GROUP","FDBNetworkOption_FDB_NET_OPTION_TRACE_MAX_LOGS_SIZE","FDBNetworkOption_FDB_NET_OPTION_TRACE_PARTIAL_FILE_SUFFIX","FDBNetworkOption_FDB_NET_OPTION_TRACE_ROLL_SIZE","FDBStreamingMode","FDBStreamingMode_FDB_STREAMING_MODE_EXACT","FDBStreamingMode_FDB_STREAMING_MODE_ITERATOR","FDBStreamingMode_FDB_STREAMING_MODE_LARGE","FDBStreamingMode_FDB_STREAMING_MODE_MEDIUM","FDBStreamingMode_FDB_STREAMING_MODE_SERIAL","FDBStreamingMode_FDB_STREAMING_MODE_SMALL","FDBStreamingMode_FDB_STREAMING_MODE_WANT_ALL","FDBTransaction","FDBTransactionOption","FDBTransactionOption_FDB_TR_OPTION_ACCESS_SYSTEM_KEYS","FDBTransactionOption_FDB_TR_OPTION_AUTO_THROTTLE_TAG","FDBTransactionOption_FDB_TR_OPTION_BYPASS_UNREADABLE","FDBTransactionOption_FDB_TR_OPTION_CAUSAL_READ_DISABLE","FDBTransactionOption_FDB_TR_OPTION_CAUSAL_READ_RISKY","FDBTransactionOption_FDB_TR_OPTION_CAUSAL_WRITE_RISKY","FDBTransactionOption_FDB_TR_OPTION_DEBUG_RETRY_LOGGING","FDBTransactionOption_FDB_TR_OPTION_DEBUG_TRANSACTION_IDENTIFIER","FDBTransactionOption_FDB_TR_OPTION_DURABILITY_DATACENTER","FDBTransactionOption_FDB_TR_OPTION_DURABILITY_DEV_NULL_IS_WEB_SCALE","FDBTransactionOption_FDB_TR_OPTION_DURABILITY_RISKY","FDBTransactionOption_FDB_TR_OPTION_INCLUDE_PORT_IN_ADDRESS","FDBTransactionOption_FDB_TR_OPTION_INITIALIZE_NEW_DATABASE","FDBTransactionOption_FDB_TR_OPTION_LOCK_AWARE","FDBTransactionOption_FDB_TR_OPTION_LOG_TRANSACTION","FDBTransactionOption_FDB_TR_OPTION_MAX_RETRY_DELAY","FDBTransactionOption_FDB_TR_OPTION_NEXT_WRITE_NO_WRITE_CONFLICT_RANGE","FDBTransactionOption_FDB_TR_OPTION_PRIORITY_BATCH","FDBTransactionOption_FDB_TR_OPTION_PRIORITY_SYSTEM_IMMEDIATE","FDBTransactionOption_FDB_TR_OPTION_READ_AHEAD_DISABLE","FDBTransactionOption_FDB_TR_OPTION_READ_LOCK_AWARE","FDBTransactionOption_FDB_TR_OPTION_READ_SYSTEM_KEYS","FDBTransactionOption_FDB_TR_OPTION_READ_YOUR_WRITES_DISABLE","FDBTransactionOption_FDB_TR_OPTION_REPORT_CONFLICTING_KEYS","FDBTransactionOption_FDB_TR_OPTION_RETRY_LIMIT","FDBTransactionOption_FDB_TR_OPTION_SERVER_REQUEST_TRACING","FDBTransactionOption_FDB_TR_OPTION_SIZE_LIMIT","FDBTransactionOption_FDB_TR_OPTION_SNAPSHOT_RYW_DISABLE","FDBTransactionOption_FDB_TR_OPTION_SNAPSHOT_RYW_ENABLE","FDBTransactionOption_FDB_TR_OPTION_SPECIAL_KEY_SPACE_RELAXED","FDBTransactionOption_FDB_TR_OPTION_TAG","FDBTransactionOption_FDB_TR_OPTION_TIMEOUT","FDBTransactionOption_FDB_TR_OPTION_TRANSACTION_LOGGING_ENABLE","FDBTransactionOption_FDB_TR_OPTION_TRANSACTION_LOGGING_MAX_FIELD_LENGTH","FDBTransactionOption_FDB_TR_OPTION_USED_DURING_COMMIT_PROTECTION_DISABLE","FDBTransactionOption_FDB_TR_OPTION_USE_PROVISIONAL_PROXIES","FDB_API_VERSION","FDB_database","FDB_future","FDB_transaction","INT16_MAX","INT16_MIN","INT32_MAX","INT32_MIN","INT8_MAX","INT8_MIN","INTPTR_MAX","INTPTR_MIN","INT_FAST16_MAX","INT_FAST16_MIN","INT_FAST32_MAX","INT_FAST32_MIN","INT_FAST8_MAX","INT_FAST8_MIN","INT_LEAST16_MAX","INT_LEAST16_MIN","INT_LEAST32_MAX","INT_LEAST32_MIN","INT_LEAST8_MAX","INT_LEAST8_MIN","PTRDIFF_MAX","PTRDIFF_MIN","SIG_ATOMIC_MAX","SIG_ATOMIC_MIN","SIZE_MAX","UINT16_MAX","UINT32_MAX","UINT8_MAX","UINTPTR_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","UINT_FAST8_MAX","UINT_LEAST16_MAX","UINT_LEAST32_MAX","UINT_LEAST8_MAX","WINT_MAX","WINT_MIN","_ATFILE_SOURCE","_BITS_STDINT_INTN_H","_BITS_STDINT_UINTN_H","_BITS_TIME64_H","_BITS_TYPESIZES_H","_BITS_TYPES_H","_BITS_WCHAR_H","_DEFAULT_SOURCE","_FEATURES_H","_POSIX_C_SOURCE","_POSIX_SOURCE","_STDC_PREDEF_H","_STDINT_H","_SYS_CDEFS_H","__FD_SETSIZE","__GLIBC_MINOR__","__GLIBC_USE_DEPRECATED_GETS","__GLIBC_USE_DEPRECATED_SCANF","__GLIBC_USE_IEC_60559_BFP_EXT","__GLIBC_USE_IEC_60559_BFP_EXT_C2X","__GLIBC_USE_IEC_60559_FUNCS_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X","__GLIBC_USE_IEC_60559_TYPES_EXT","__GLIBC_USE_ISOC2X","__GLIBC_USE_LIB_EXT2","__GLIBC__","__GNU_LIBRARY__","__HAVE_GENERIC_SELECTION","__INO_T_MATCHES_INO64_T","__LONG_DOUBLE_USES_FLOAT128","__OFF_T_MATCHES_OFF64_T","__RLIM_T_MATCHES_RLIM64_T","__STATFS_MATCHES_STATFS64","__STDC_IEC_559_COMPLEX__","__STDC_IEC_559__","__STDC_ISO_10646__","__SYSCALL_WORDSIZE","__TIMESIZE","__USE_ATFILE","__USE_FORTIFY_LEVEL","__USE_ISOC11","__USE_ISOC95","__USE_ISOC99","__USE_MISC","__USE_POSIX","__USE_POSIX199309","__USE_POSIX199506","__USE_POSIX2","__USE_POSIX_IMPLICITLY","__USE_XOPEN2K","__USE_XOPEN2K8","__WORDSIZE","__WORDSIZE_TIME64_COMPAT32","__blkcnt64_t","__blkcnt_t","__blksize_t","__caddr_t","__clock_t","__clockid_t","__daddr_t","__dev_t","__fsblkcnt64_t","__fsblkcnt_t","__fsfilcnt64_t","__fsfilcnt_t","__fsid_t","__fsword_t","__gid_t","__glibc_c99_flexarr_available","__id_t","__ino64_t","__ino_t","__int16_t","__int32_t","__int64_t","__int8_t","__int_least16_t","__int_least32_t","__int_least64_t","__int_least8_t","__intmax_t","__intptr_t","__key_t","__loff_t","__mode_t","__nlink_t","__off64_t","__off_t","__pid_t","__quad_t","__rlim64_t","__rlim_t","__sig_atomic_t","__socklen_t","__ssize_t","__suseconds_t","__syscall_slong_t","__syscall_ulong_t","__time_t","__timer_t","__u_char","__u_int","__u_long","__u_quad_t","__u_short","__uid_t","__uint16_t","__uint32_t","__uint64_t","__uint8_t","__uint_least16_t","__uint_least32_t","__uint_least64_t","__uint_least8_t","__uintmax_t","__useconds_t","__val","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","fdb_add_network_thread_completion_hook","fdb_bool_t","fdb_create_database","fdb_database_create_transaction","fdb_database_destroy","fdb_database_set_option","fdb_error_predicate","fdb_error_t","fdb_future_block_until_ready","fdb_future_cancel","fdb_future_destroy","fdb_future_get_error","fdb_future_get_int64","fdb_future_get_key","fdb_future_get_keyvalue_array","fdb_future_get_string_array","fdb_future_get_value","fdb_future_is_ready","fdb_future_release_memory","fdb_future_set_callback","fdb_get_client_version","fdb_get_error","fdb_get_max_api_version","fdb_network_set_option","fdb_run_network","fdb_select_api_version_impl","fdb_setup_network","fdb_stop_network","fdb_transaction_add_conflict_range","fdb_transaction_atomic_op","fdb_transaction_cancel","fdb_transaction_clear","fdb_transaction_clear_range","fdb_transaction_commit","fdb_transaction_destroy","fdb_transaction_get","fdb_transaction_get_addresses_for_key","fdb_transaction_get_approximate_size","fdb_transaction_get_committed_version","fdb_transaction_get_estimated_range_size_bytes","fdb_transaction_get_key","fdb_transaction_get_range","fdb_transaction_get_read_version","fdb_transaction_get_versionstamp","fdb_transaction_on_error","fdb_transaction_reset","fdb_transaction_set","fdb_transaction_set_option","fdb_transaction_set_read_version","fdb_transaction_watch","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","int_fast16_t","int_fast32_t","int_fast64_t","int_fast8_t","int_least16_t","int_least32_t","int_least64_t","int_least8_t","intmax_t","into","into","into","into","into","key","key_length","keyvalue","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","uint_fast16_t","uint_fast32_t","uint_fast64_t","uint_fast8_t","uint_least16_t","uint_least32_t","uint_least64_t","uint_least8_t","uintmax_t","value","value_length"],"q":["foundationdb_sys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"di":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,1,2,3,4,5,0,0,0,0,0,0,0,0,0,1,2,3,4,5,5,5,0,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,0,0,0,0,0,0,0,0,0,5,5],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["__fsid_t",3]],[[],["fdb_future",3]],[[],["fdb_database",3]],[[],["fdb_transaction",3]],[[],["keyvalue",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"__fsid_t"],[3,"FDB_future"],[3,"FDB_database"],[3,"FDB_transaction"],[3,"keyvalue"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};